class Node {
    int data;
    Node next;

    // Constructor to create a new node with a given data value
    Node(int data) {
        this.data = data;
        this.next = null;
    }
}

public class LinkedList {
    Node head; // Head of the linked list

    // Constructor to initialize an empty linked list
    LinkedList() {
        head = null;
    }

    // Method to insert a new node at the end of the linked list
    void append(int data) {
        Node newNode = new Node(data);

        // If the linked list is empty, set the new node as the head
        if (head == null) {
            head = newNode;
            return;
        }

        // Traverse the linked list to find the last node
        Node last = head;
        while (last.next != null) {
            last = last.next;
        }

        // Set the new node as the next node of the last node
        last.next = newNode;
    }

    // Method to print the linked list
    void printList() {
        Node current = head;
        System.out.print("Linked List: ");
        while (current != null) {
            System.out.print(current.data + " ");
            current = current.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        // Create a new linked list
        LinkedList linkedList = new LinkedList();

        // Insert elements into the linked list
        linkedList.append(1);
        linkedList.append(2);
        linkedList.append(3);
        linkedList.append(4);

        // Print the linked list
        linkedList.printList();
    }
}
